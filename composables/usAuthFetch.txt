import { useAuthStore } from "@/stores/authStore";
import { refreshAccessToken } from "@/utils/auth";

export async function useAuthFetch(url: string, options: RequestInit = {}) {
  const authStore = useAuthStore();

  // Ensure headers exist
  options.headers = {
    ...options.headers,
    Authorization: authStore.token ? `Bearer ${authStore.token}` : "",
  };

  try {
    const response = await fetch(url, options);

    // If the response is unauthorized, refresh the token
    if (response.status === 401) {
      const newToken = await refreshAccessToken();
      if (newToken) {
        authStore.token = newToken;
        options.headers = options.headers ? { ...options.headers } : {};
        return await fetch(url, options); // Retry the request with new token
      } else {
        authStore.clearTokens();
        throw new Error("Unauthorized - Redirecting to login");
      }
    }

    return response;
  } catch (error) {
    console.error("Fetch error:", error);
    throw error;
  }
}
